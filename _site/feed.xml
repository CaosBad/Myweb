<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zhendi</title>
    <description></description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 26 Feb 2017 17:41:55 +0800</pubDate>
    <lastBuildDate>Sun, 26 Feb 2017 17:41:55 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>我的2016年读书数据</title>
        <description>&lt;h4&gt;核心技术：Echarts&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;最近几年读的书真是越来越有征兆。前几天在GitHub上git到一个很有意思的图表展示工具，一玩就上瘾了。呐～废话不多说，先上个图：&lt;/p&gt;

&lt;html&gt;
&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot; /&gt;
    &lt;title&gt;ECharts&lt;/title&gt;
    &lt;!-- 引入 echarts.js --&gt;
    &lt;script src=&quot;/assets/js/echarts.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&gt;
    &lt;div id=&quot;main&quot; style=&quot;width: 750px;height:400px;&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById(&#39;main&#39;));

        // 指定图表的配置项和数据
        var xData = function() {
    var data = [&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;];
    for (var i = 1; i &lt; 13; i++) {
        //data.push(i + &quot;月份&quot;);
        data.push(data[i]);
    }
    return data;
}();

option = {
    backgroundColor: &quot;#FAFAFA&quot;,
    &quot;title&quot;: {
        &quot;text&quot;: &quot;2016 Reading Records&quot;,
        &quot;subtext&quot;: &quot;BY Zhendi Huang&quot;,
       x: &quot;6%&quot;,

        textStyle: {
            color: &#39;#010D13&#39;,
            fontSize: &#39;22&#39;,
        },
        subtextStyle: {
            color: &#39;#90979c&#39;,
            fontSize: &#39;16&#39;,

        },
    },
    &quot;tooltip&quot;: {
        &quot;trigger&quot;: &quot;axis&quot;,
        &quot;axisPointer&quot;: {
            &quot;type&quot;: &quot;shadow&quot;,
            textStyle: {
                color: &quot;#000000&quot;
            }

        },
    },
    &quot;grid&quot;: {
        &quot;borderWidth&quot;:0,
        &quot;top&quot;: 210,
        &quot;bottom&quot;: 90,
        textStyle: {
            color: &quot;#fff&quot;
        }
    },
    &quot;legend&quot;: {
        x: &#39;70%&#39;,
        top: &#39;11%&#39;,
        textStyle: {
            color: &#39;#90979c&#39;,
        },
        &quot;data&quot;: [&#39;Personal Development&#39;, &#39;Professional&#39;, &#39;平均&#39;]
    },


    &quot;calculable&quot;: true,
    &quot;xAxis&quot;: [{
        &quot;type&quot;: &quot;category&quot;,
        &quot;axisLine&quot;: {
            lineStyle: {
                color: &#39;#90979c&#39;
            }
        },
        &quot;splitLine&quot;: {
            &quot;show&quot;: false
        },
        &quot;axisTick&quot;: {
            &quot;show&quot;: false
        },
        &quot;splitArea&quot;: {
            &quot;show&quot;: false
        },
        &quot;axisLabel&quot;: {
            &quot;interval&quot;: 0,

        },
        &quot;data&quot;: xData,
    }],
    &quot;yAxis&quot;: [{
        &quot;type&quot;: &quot;value&quot;,
        &quot;splitLine&quot;: {
            &quot;show&quot;: false
        },
        &quot;axisLine&quot;: {
            lineStyle: {
                color: &#39;#90979c&#39;
            }
        },
        &quot;axisTick&quot;: {
            &quot;show&quot;: false
        },
        &quot;axisLabel&quot;: {
            &quot;interval&quot;: 0,

        },
        &quot;splitArea&quot;: {
            &quot;show&quot;: false
        },

    }],
    &quot;dataZoom&quot;: [{
        &quot;show&quot;: true,
        &quot;height&quot;: 30,
        &quot;xAxisIndex&quot;: [
            0
        ],
        bottom: 30,
        &quot;start&quot;: 10,
        &quot;end&quot;: 80,
        handleIcon: &#39;path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z&#39;,
        handleSize: &#39;100%&#39;,
        handleStyle: {
            color: &quot;#d3dee5&quot;,

        },
        textStyle: {
            color: &quot;#90979c&quot;
        },
        borderColor: &quot;#90979c&quot;


    }, {
        &quot;type&quot;: &quot;inside&quot;,
        &quot;show&quot;: true,
        &quot;height&quot;: 15,
        &quot;start&quot;: 1,
        &quot;end&quot;: 35
    }],
    &quot;series&quot;: [{
            &quot;name&quot;: &quot;Personal Development&quot;,
            &quot;type&quot;: &quot;bar&quot;,
            &quot;stack&quot;: &quot;总量&quot;,
            &quot;barMaxWidth&quot;: 35,
            &quot;barGap&quot;: &quot;10%&quot;,
            &quot;itemStyle&quot;: {
                &quot;normal&quot;: {
                    &quot;color&quot;: &quot;#1C688E&quot;,
                    &quot;label&quot;: {
                        &quot;show&quot;: true,
                        &quot;textStyle&quot;: {
                            &quot;color&quot;: &quot;#FFFFFF&quot;
                        },
                        &quot;position&quot;: &quot;insideTop&quot;,
                        formatter: function(p) {
                            return p.value &gt; 0 ? (p.value) : &#39;&#39;;
                        }
                    }
                }
            },
            &quot;data&quot;: [
                4,
                3,
                3,
                2,
                3,
                1,
                5,
                3,
                2,
                2,
                2,
                3
            ],
        },

        {
            &quot;name&quot;: &quot;Professional&quot;,
            &quot;type&quot;: &quot;bar&quot;,
            &quot;stack&quot;: &quot;总量&quot;,
            &quot;itemStyle&quot;: {
                &quot;normal&quot;: {
                    &quot;color&quot;: &quot;#A0CCE2&quot;,
                    &quot;barBorderRadius&quot;: 0,
                    &quot;label&quot;: {
                        &quot;show&quot;: true,
                        &quot;textStyle&quot;: {
                            &quot;color&quot;: &quot;#90979c&quot;
                        },
                        &quot;position&quot;: &quot;top&quot;,
                        formatter: function(p) {
                            return p.value &gt; 0 ? (p.value) : &#39;&#39;;
                        }
                    }
                }
            },
            &quot;data&quot;: [
                2,
                3,
                1,
                1,
                2,
                1,
                2,
                3,
                4,
                3,
                2,
                0
            ]
        }, {
            &quot;name&quot;: &quot;Amount&quot;,
            &quot;type&quot;: &quot;line&quot;,
            &quot;stack&quot;: &quot;总量&quot;,
            symbolSize: 10,
            symbol: &#39;circle&#39;,
            &quot;itemStyle&quot;: {
                &quot;normal&quot;: {
                    &quot;color&quot;: &quot;#1C688E&quot;,
                    &quot;barBorderRadius&quot;: 0,
                    &quot;label&quot;: {
                        &quot;show&quot;: true,
                        &quot;position&quot;: &quot;top&quot;,
                        formatter: function(p) {
                            return p.value &gt; 0 ? (p.value) : &#39;&#39;;
                        }
                    }
                }
            },
            &quot;data&quot;: [
                6,
                6,
                4,
                3,
                5,
                2,
                7,
                5,
                6,
                5,
                4,
                3
            ]
        },
    ]
}
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;p&gt;这是我16年的读书数据，惊奇地觉得自己书读少了。自从工作以来，忙的时候每天跟打仗一样，好在技术越来越进步，APP商店里总有各种各样的听书软件可以挑选，比如“喜马拉雅”什么的。但我并不是那么喜欢听书，听书的速度要比看书的速度慢很多，而且大多数情况下听后无感。相比之下，我更享受在体贴里看电子书的感觉，总有一种超越时空的维和感，似乎只有把所有零碎的时间揉成一团，失去的时候才感觉到痛。&lt;/p&gt;

&lt;p&gt;跨年之后的那几天，某瓣给我出了份个人感觉并没有什么意义的年度读书报告，大致回报了一下我去年读了多少页书，多少字，如果折合成一天24小时不吃不喝不睡需要花几天。阅读本就是一件让人快乐的事，岂能用数量和时间来衡量。有的时候喜欢的文字会来来回回看好多遍，不喜欢的地方略知一二即可，这没什么。&lt;/p&gt;

&lt;p&gt;不过讲真，那么多关于阅读和记录的网站，最喜欢的就是简叔和某瓣了，书荒的时候上去看看评分，对于不会挑书的人来说简直是一大福利。下面是一则关于书籍厚度和评分关系分析的图表（数据来源于某瓣）：&lt;/p&gt;

&lt;html&gt;
&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot; /&gt;
    &lt;title&gt;ECharts&lt;/title&gt;
    &lt;!-- 引入 echarts.js --&gt;
    &lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&gt;
    &lt;div id=&quot;Second&quot; style=&quot;width: 750px;height:550px;&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        // 基于准备好的dom，初始化echarts实例
        var mySecondChart = echarts.init(document.getElementById(&#39;Second&#39;));
       // 指定图表的配置项和数据
       var data = [
     [
         [126, 0],
         [152, 7.5],
         [216, 7.6],
         [354, 7.2],
         [232, 7.8],
         [100, 0],
         [120, 8.8],
         [414, 8.4],
         [364, 7],
         [196, 8.3],
         [147, 8.7],
         [225, 7.9],
         [261, 7.6],
         [226, 7]
     ],
     [
         [271, 8.5],
         [307, 0],
         [256, 8.5],
         [323, 7.6],
         [375, 8],
         [299, 6.9],
         [352, 7.7],
         [261, 9],
         [128, 6.5],
         [185, 7.8],
         [183, 8.2],
         [264, 8.1],
         [348, 6.9],
         [166, 7.6],
         [221, 7.3],
         [350, 8],
         [292, 7.6],
         [223, 7],
         [108, 6.6],
         [144, 6.9],
         [380, 8.8],
         [458, 6.8],
         [324, 6.7],
         [247, 8]
     ],
     [
         [398, 8.1],
         [166, 0],
         [268, 8.5],
         [248, 9],
         [244, 7.6],
         [135, 7.5],
         [277, 7.6],
         [264, 8.4],
         [314, 8.5],
         [244, 7.9],
         [337, 8.6],
         [244, 6.5],
         [474, 8.3],
         [407, 6.7],
         [125, 7.6],
         [167, 7.2],
         [126, 8],
         [304, 7.2],
         [123, 8.5],
         [316, 7.7],
         [298, 8.6],
         [157, 8.4],
         [661, 0],
         [184, 7.7],
         [281, 8.6],
         [192, 6.8],
         [310, 6.8],
         [153, 7.5],
         [276, 7.3],
         [355, 8.4],
         [158, 7.3],
         [338, 8.5],
         [272, 8.6],
         [363, 0],
         [345, 8.9],
         [299, 8.7],
         [224, 7],
         [68, 0],
         [356, 9.3],
         [432, 7.2],
         [192, 7.5],
         [123, 7.5],
         [149, 0],
         [218, 0],
         [416, 7.6],
         [148, 7.7],
         [250, 8.7],
         [126, 7.8],
         [264, 6.8],
         [424, 8.8],
         [248, 8.2],
         [288, 9],
         [154, 7.5],
         [165, 6.9],
         [272, 8.1],
         [784, 6.9],
         [86, 0],
         [93, 7.1],
         [186, 4.9],
         [206, 9],
         [159, 8.2],
         [180, 8.2],
         [128, 8.4],
         [127, 8.9],
         [159, 7.5],
         [132, 7.6],
         [234, 7.4],
         [96, 8.7],
         [262, 7.5],
         [147, 8.5],
         [328, 7],
         [80, 8.9],
         [320, 7.6],
         [195, 8.4],
         [264, 7.2],
         [301, 0],
         [320, 0],
         [590, 7.8],
         [830, 0],
         [249, 0],
         [256, 7.3],
         [186, 8.7],
         [768, 0],
         [460, 7.9],
         [270, 7.1],
         [296, 7.6],
         [354, 8.2]
     ],
     [
         [208, 8],
         [276, 8.3],
         [180, 8.1],
         [208, 5.9],
         [272, 8.1],
         [228, 8.9],
         [309, 8.5],
         [311, 0],
         [368, 8.6],
         [155, 8.1],
         [338, 9],
         [248, 7.3],
         [272, 9.6],
         [334, 8],
         [372, 7.2],
         [215, 8],
         [200, 8.9],
         [244, 7.9],
         [130, 8.9],
         [440, 9.3],
         [162, 0],
         [296, 0],
         [145, 8.1],
         [256, 8.3],
         [245, 9],
         [232, 7.7],
         [260, 8.7],
         [251, 8.1],
         [658, 8.7],
         [302, 8.8],
         [284, 8.6],
         [168, 8.4],
         [132, 8.4],
         [387, 8.9],
         [170, 9.1],
         [180, 0],
         [180, 7.8],
         [223, 7.9],
         [200, 8.1],
         [155, 9.1],
         [456, 7.2],
         [144, 8.8],
         [225, 8.4],
         [192, 7.8],
         [329, 7.8],
         [242, 7.5],
         [452, 8],
         [479, 8.9],
         [143, 8.2],
         [467, 9.1],
         [320, 8.9],
         [300, 8],
         [229, 7.9],
         [265, 8.2],
         [159, 7.5],
         [291, 8.6],
         [260, 7.7],
         [190, 7.6],
         [160, 8.3],
         [279, 0],
         [368, 8.9],
         [399, 9],
         [360, 8.6],
         [284, 8.5],
         [334, 7.3],
         [83, 0],
         [244, 8.3],
         [248, 8],
         [384, 8.3],
         [272, 8.1],
         [243, 7.6],
         [208, 6.7],
         [160, 7.5],
         [152, 9],
         [392, 8.3],
         [264, 8.2],
         [320, 7.2],
         [258, 9.3],
         [83, 9.2],
         [258, 8.3],
         [493, 9],
         [252, 7.4],
         [98, 9.2],
         [252, 8.4],
         [223, 7],
         [280, 7.7],
         [205, 8.2],
         [191, 8.2],
         [1516, 0],
         [403, 8],
         [260, 7.9],
         [135, 0],
         [174, 8.6],
         [160, 7.6],
         [268, 8],
         [376, 8.5],
         [141, 8.6],
         [136, 8.4],
         [128, 8.4],
         [139, 7.3],
         [144, 8.9],
         [208, 8.3],
         [152, 8.6],
         [122, 7.2],
         [246, 8.2],
         [153, 9.3],
         [244, 8],
         [358, 8],
         [344, 7.6],
         [194, 9],
         [235, 7.7],
         [236, 8],
         [325, 8],
         [392, 8.4],
         [613, 8.3],
         [400, 9.2],
         [291, 8],
         [345, 8.9],
         [291, 9.2],
         [378, 8.5],
         [304, 8.3],
         [364, 8.4],
         [264, 7.9],
         [620, 8.3],
         [469, 9.1],
         [154, 7.3],
         [181, 5.8],
         [309, 7.7],
         [448, 9],
         [317, 9.1],
         [328, 8.8],
         [352, 8.9],
         [525, 9],
         [336, 7.8],
         [547, 7.4],
         [400, 7.2],
         [637, 9.2]
     ],
     [
         [214, 9],
         [279, 8.3],
         [198, 8.7],
         [350, 7.4],
         [288, 9],
         [20, 8.1],
         [344, 8.2],
         [264, 9],
         [227, 8],
         [256, 9],
         [346, 8.8],
         [256, 8.2],
         [296, 8.9],
         [310, 7.2],
         [160, 8.7],
         [344, 8.6],
         [330, 8.2],
         [316, 8.7],
         [276, 8],
         [325, 8.6],
         [347, 8.6],
         [38, 8],
         [288, 8.2],
         [479, 0],
         [133, 8.3],
         [252, 8.9],
         [439, 8.8],
         [201, 9.1],
         [954, 8.9],
         [255, 8.5],
         [600, 9.3],
         [346, 7.6],
         [200, 8.7],
         [185, 9.1],
         [302, 8.8],
         [300, 8.1],
         [251, 8.9],
         [255, 8],
         [188, 8.6],
         [359, 8.9],
         [232, 8.8],
         [384, 9.1],
         [317, 8.6],
         [328, 8.1],
         [609, 9.5],
         [902, 8.2],
         [611, 8.5],
         [352, 8.4],
         [549, 0],
         [1606, 9.5],
         [968, 8],
         [320, 8.4],
         [535, 8.5],
         [120, 7.9],
         [118, 0],
         [272, 7.9],
         [554, 8.5],
         [117, 7.9],
         [379, 7.9],
         [324, 7.6],
         [351, 8.8],
         [293, 0],
         [160, 7.6],
         [313, 7.9],
         [377, 7.1],
         [976, 9.3],
         [944, 9.3],
         [319, 9.4],
         [361, 6.7],
         [457, 0],
         [201, 8.6],
         [778, 9.1],
         [263, 5.9],
         [362, 8.8],
         [792, 8],
         [279, 8.1],
         [210, 8.6],
         [177, 7.6]
     ]
 ]

 var nameNum = [&#39;一&#39;, &#39;二&#39;, &#39;三&#39;, &#39;四&#39;, &#39;五&#39;];
 var series = data.map(function(d, i) {
     return {
         data: d,
         type: &#39;scatter&#39;,
         name: nameNum[i] + &#39;星&#39;,
         itemStyle: {
             normal: {
                 opacity: 0.3 + i * 0.2
             },
             emphasis: {
                 borderColor: &#39;#D0648A&#39;,
                 borderWidth: 2,
                 opacity: 0.75
             }
         },
         symbolSize: (5 - i) * 5 + 2,
         markLine: {
             data: [{
                 type: &#39;average&#39;,
                 valueIndex: 1
             }, {
                 type: &#39;average&#39;,
                 valueIndex: 0
             }]
         }
     }
 });

 option = {
     title: {
         text: &#39;书的页数与评分的关系&#39;
     },
     color: [&#39;#90979c&#39;, &#39;#848484&#39;, &#39;#A0CCE2&#39;,&#39;#1C688E&#39;,&#39;#F7819F&#39;],
     xAxis: {
         max: 1000,
         min: 0,
         name: &#39;页数&#39;,
         axisLine: {
             lineStyle: {
                 color: &#39;#90979c&#39;
             }
         }
     },
     yAxis: {
         max: 10,
         min: 0,
         name: &#39;豆瓣平均分&#39;,
         axisLine: {
             lineStyle: {
                 color: &#39;#90979c&#39;
             }
         }
     },
     grid: {
         left: 80,
         right: 40,
         bottom: 100
     },
     dataZoom: [{
         bottom: 40,
         fillerColor: &#39;#90979c&#39;,
         borderColor: &#39;#90979c&#39;,
         &quot;start&quot;: 0,
         &quot;end&quot;: 70,
         handleStyle: {
             color: &#39;#d3dee5&#39;
         }
     }, {
         left: 20,
         yAxisIndex: 0,
         fillerColor: &#39;#90979c&#39;,
         borderColor: &#39;#90979c&#39;,
         &quot;start&quot;: 10,
         &quot;end&quot;: 100,
         handleStyle: {
             color: &#39;#d3dee5&#39;
         }
     }],
     series: series,
     legend: {
         left: &#39;center&#39;,
         top: &#39;bottom&#39;,
         data: [&#39;一星&#39;, &#39;二星&#39;, &#39;三星&#39;, &#39;四星&#39;, &#39;五星&#39;]
     }
 };
       // 使用刚指定的配置项和数据显示图表。
        mySecondChart.setOption(option);
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;p&gt;横轴表示书的页数（厚度），纵轴表示评分。关于这幅图传递出的信息，个人深表赞同。比较理想的书籍，大概在200-300页左右，太薄或太厚都会影响阅读感受。
至于简叔，可以看看别人写的读书报告，大部分阅读指南还是值得借鉴的。&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Echarts代码实现部分&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
在官网下载包含源代码的&lt;code class=&quot;highlighter-rouge&quot;&gt;Echarts.js&lt;/code&gt;文件，并像普通的 JavaScript 库一样用 script 标签引入。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;ECharts&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 引入 echarts.js --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;echarts.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: 600px;height:400px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 基于准备好的dom，初始化echarts实例&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myChart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;echarts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;main&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;// 指定图表的配置项和数据&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;// 使用刚指定的配置项和数据显示图表。&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;myChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Tue, 10 Jan 2017 00:00:00 +0800</pubDate>
        <link>/2017/01/10/ECharts-2016Reading/</link>
        <guid isPermaLink="true">/2017/01/10/ECharts-2016Reading/</guid>
        
        
        <category>DataAnalysis数据分析</category>
        
      </item>
    
      <item>
        <title>基于Tableau的敏感性分析</title>
        <description>&lt;p&gt;最近闲来无事，做了个小型的数据分析研究。数据来源于在职选修的一门课程，属于Capstone的一个研究课题。数据量不大，工具也很简单。个人感觉，要做好数据分析，更重要的是解决问题的思路，流畅的算法，对整体流程要有清晰的思路。&lt;br /&gt;
分析工具：EXCEL Solver, Tableau Dashboard&lt;/p&gt;

&lt;h3&gt;About the Case Study&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;Background:&lt;/h4&gt;
&lt;p&gt;XXX Properties is a residential property management company. As Short-term Rentals like Airbnb are becoming more and more popular, some of its property owners want to term some long-term rental properties into short-term rentals. The task is to evaluate whether the conversions are necessary and profitable.&lt;/p&gt;

&lt;h4&gt;Methods:&lt;/h4&gt;
&lt;p&gt;Excel to build models&amp;amp; Tableau to visualize data&lt;/p&gt;

&lt;h4&gt;Data Given by Relevant Stakeholders:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Tested data include 244 properties owned by the one client.&lt;/li&gt;
&lt;li&gt;The occupancy rate of those 244 properties is 97.3% (or 36/37 months) when they are managed as long-term rentals.&lt;/li&gt;
&lt;li&gt;The initial capital required to convert a long-term rental property to a short-term rental property is $30,000 (for furnishings, linens, etc.), which will depreciate over 5 years.&lt;/li&gt;
&lt;li&gt;$6000 in cash will be needed for each property each year after the first (conversion) year to cover items that wear out quickly. This amount is treated as an expense and is not depreciated.&lt;/li&gt;
&lt;li&gt;Utilities will be $300 a month for each property, or $3600 a year.&lt;/li&gt;
&lt;li&gt;The hospitality fee (variable cost) for each visit (for key service, cleaning, etc.) will be $100, regardless of the actual number of days of a visit.&lt;/li&gt;
&lt;li&gt;The average short-term stay is 3 nights.&lt;/li&gt;
&lt;li&gt;All the properties have the same capital expenditure and fixed costs.&lt;/li&gt;
&lt;li&gt;The total default transaction fee is 30%, including 10% for potential regulatory and legal fees and 20% for online short-term rental provider (like Airbnb).&lt;/li&gt;
&lt;li&gt;All clients pay their rent on time.&lt;/li&gt;
&lt;li&gt;Comparable Examples are short-term rental properties with same type and in the same locations.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Ignore the impact of any:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;weekly or seasonal changes in rent or occupancy rate.&lt;/li&gt;
  &lt;li&gt;marketing strategies, like discounts or coupons.&lt;/li&gt;
  &lt;li&gt;special events during the year that might affect the rentals in one specific location.&lt;/li&gt;
  &lt;li&gt;loss in rent during the time interval when properties are being converted to short-term rental properties.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Data Cleansing Before Analyzing Them&lt;/h3&gt;
&lt;p&gt;Data put into Tableau, and Tableau Filter used to exclude outliers.&lt;/p&gt;

&lt;h4&gt;Raw Forecast Model&lt;/h4&gt;
&lt;p&gt;In my first model(the first best-fit line), I tried to find the correlation between short-term occupancy rate and rental price.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/img/1.png&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;

&lt;h4&gt;Normalized Forecast Model&lt;/h4&gt;
&lt;p&gt;It seems that all the points are scattering around. It was hard to find the correlation. Hence in my second model(the normalized best-fit line), I was to minimize the differenced.I assumed that no rent can be set lower than 10th percentile or higher than 90th. Hence:&lt;br /&gt;Sample property Percentile rent = .1 + .8*[((sample rent) – (10th percentile [low] rent)) / ((90th percentile [high] rent) – (10th percentile [low] rent))].&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/img/2.png&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Base on the Excel Calculation, then I have:&lt;br /&gt;
Slope Beta = -0.7914&lt;br /&gt;
Y-Intercept Alpha = 0.8506&lt;br /&gt;
So that each maximized rental price of those 244 short-term properties can be calculated using “MS Solver”.&lt;/p&gt;

&lt;h4&gt;Alternative to SOLVER&lt;/h4&gt;
&lt;p&gt;Calculating the best rental price one by one can be time-consuming. We want it to be efficient and can be applied to Tableau. The altanative way to calculate the maximized price can also be performed as:&lt;br /&gt;
 Nightly rent in $$ = [(Beta&lt;em&gt;((10th - ((90th – 10th)/8)))/(1.25&lt;/em&gt;(90th – 10th)) – Alpha] &lt;em&gt;[(1.25&lt;/em&gt;(90th – 10th))/(2*Beta)]
Base on that, calculations can be created via Tableau.&lt;/p&gt;

&lt;h4&gt;Financial Model in Tableau&lt;/h4&gt;
&lt;p&gt;I created some parameters(measurable variables) in Tableau, add some calculations, so that i have my dashboard like this:
&lt;img src=&quot;/img/watershed.png&quot; alt=&quot;&quot; /&gt;
It did took some time to generate the jittered map. But by changing the number in the box(parameters), it can me much easier for people to see whether the investment would be profitable.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 00:00:00 +0800</pubDate>
        <link>/2016/12/20/Sensitive-Analysis/</link>
        <guid isPermaLink="true">/2016/12/20/Sensitive-Analysis/</guid>
        
        
        <category>DataAnalysis数据分析</category>
        
      </item>
    
      <item>
        <title>用Jekyll建立个人网站的一些碎碎念</title>
        <description>&lt;p&gt;最近碎碎念太多，无处安置，在GoDaddy上买了个打折的两年期域名之后，决定对之前的网站进行一次大翻新。个人网站就像一个家，爱家的人，总有各种理由瞎折腾。&lt;/p&gt;

&lt;h4&gt;为什么创建个人博客？&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;提高自己编程的能力&lt;/li&gt;
&lt;li&gt;提高审美和设计感&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;市面上有很多免费搭建网上的平台，而且不用编程，为什么Github?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;如上所述，提高自己的编程能力&lt;/li&gt;
&lt;li&gt;Github是世界级的程序员交流和分享平台，并有配套的优秀的编码工具&lt;/li&gt;
&lt;li&gt;免费的监管，不用担心维护和数据的丢失&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;什么是Jekyll?&lt;/h4&gt;
&lt;p&gt;Jekyll是一种静态网页生成工具, 有一套符合Jekyll规范的模板目录如下，自建的网站只要符合规范就可以.用Jekyll 搭建的网站，可以搭建在任何你喜欢的服务器上，也可以托管在github pages上，而且完全是免费的呢.&lt;/p&gt;

&lt;h4&gt;安装Jekyll:&lt;/h4&gt;
&lt;p&gt;$gem install jekyll&lt;/p&gt;

&lt;p&gt;安装了Jekyll的Gem包之后，就可以直接使用Jekyll的命令了。小女子不才，安装Jekyll的时候问题也一箩筐，比如常见的几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby要更新到最新版本。尽管Mac自带Rudy和Gem, 但一定要记得检查是否更新， 命令为：$gem update.&lt;/li&gt;
&lt;li&gt;没有Xcode的最好安装Xcode(虽然它很大），但是安装Xcode 也附带安装了很多开发和编译中需要用到的软件。当然，也可以手动安装那些软件，不过那样做既要了解程序之间的相互依赖，又要注意程序升级之类的问题，那不是没事找事嘛。&lt;/li&gt;
&lt;li&gt;安装的时候出现类似write permission denied的信息，原因是系统自带的rRuby版本目录在/user/bin下，解决的办法为：http://www.cnblogs.com/nekoooo/p/5477987.html&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;常用的Jekyll/Git 命令&lt;/h4&gt;
&lt;p&gt;$Jekyll Serve –watch –baseurl “ “  //运行后可以在开发服务器http://localhost:4000上查看网站搭建的效果&lt;br /&gt;
$Jekyll Build  //当前文件夹内容自动生成到 &lt;code class=&quot;highlighter-rouge&quot;&gt;./_site&lt;/code&gt;中&lt;br /&gt;
&amp;gt; $git reset soft Head  //Commit到Github之后又反悔了的&lt;/p&gt;

&lt;h4&gt;About Layout&lt;/h4&gt;
&lt;p&gt;玩过最近比较出名的一款“时间块”APP，对类似的字体很带感~ 图大一点好，不至于太枯燥。&lt;/p&gt;

&lt;p&gt;网站未来建设的一些想法~&lt;/p&gt;
&lt;ul&gt;
[ ] 评论区
[ ] 字数统计
[ ] 访客统计
[ ] 点赞功能 hiahia~
&lt;ul&gt;

持续更新中~ Last Updated 02.22.2017
&lt;/ul&gt;&lt;/ul&gt;
</description>
        <pubDate>Thu, 01 Dec 2016 00:00:00 +0800</pubDate>
        <link>/2016/12/01/Sensitive-Analysis0/</link>
        <guid isPermaLink="true">/2016/12/01/Sensitive-Analysis0/</guid>
        
        
        <category>Journal杂七杂八</category>
        
      </item>
    
  </channel>
</rss>
